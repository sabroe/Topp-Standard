/*
 * Project: Topp Standard
 * GitHub: https://github.com/sabroe/Topp-Standard
 *
 * Copyright 2024-2025 Morten Sabroe Mortensen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'java-library-distribution'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
}

dependencies {
    api 'jakarta.jms:jakarta.jms-api:2.0.3'  //Yes, not newer 3.0.1; artemis-jms-client:2.41.0 is behind!
    api 'org.apache.activemq:artemis-jms-client:2.41.0'

    configurations {
        all*.exclude group: 'org.slf4j', module: 'slf4j-simple'
        all*.exclude group: 'org.slf4j', module: 'slf4j-ext'
        all*.exclude group: 'org.apache.activemq', module: 'artemis-commons'
        all*.exclude group: 'org.apache.activemq', module: 'artemis-core-client'
    }
}

java {
    modularity.inferModulePath = true
}

tasks.withType(JavaCompile) {
//    options.compilerArgs += ['--module-path', configurations.runtimeClasspath.asPath]
    options.compilerArgs += ['--module-path', configurations.compileClasspath.asPath]
}

tasks.withType(Javadoc) {
//    options.addStringOption('--module-path', configurations.compileClasspath.asPath + ";" + configurations.runtimeClasspath.asPath)
//    options.addStringOption('--add-modules', 'activemq.client,jakarta.messaging,org.slf4j,lombok')
//    options.modulePath = sourceSets.main.runtimeClasspath
    options.modulePath = sourceSets.main.compileClasspath
}

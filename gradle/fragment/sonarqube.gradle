/*
 * Project: Topp Grasp
 * GitHub: https://github.com/sabroe/Topp-Grasp
 *
 * Copyright 2022-2024 Morten Sabroe Mortensen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

tasks.withType(JavaCompile) {
    apply plugin: "org.sonarqube"

    //https://docs.sonarsource.com/sonarqube/latest/analyzing-source-code/scanners/sonarscanner-for-gradle/
    //https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-gradle/

    sonar  {
//        isSkipProject = false
        properties {
            property "sonar.token", System.getenv("SONARQUBE_TOKEN") ?: ""
            property "sonar.host.url", System.getenv("SONARQUBE_HOST") ?: "http://localhost:9000"

            def rootKey = "${rootProject.group}:${rootProject.name}"
            def moduleKey = "${project.path}"
            def projectKey = project == rootProject ? rootKey : "${rootKey}${moduleKey}"  //SonarQube "project key" as defined by the documentation!
            def sanitizedProjectKey = projectKey.replaceAll("\\s+", "-")

            property "sonar.projectKey", sanitizedProjectKey

            property "sonar.verbose", "true"
            property "sonar.profile", "Sonar way"
        }
    }

//    project.tasks["sonar"].dependsOn "anotherTask"

    tasks.check {
        if (project.hasProperty("runSonar") && project.property("runSonar") == "true") {
            dependsOn tasks.sonar
        }
    }
}
